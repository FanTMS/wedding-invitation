const BOT_TOKEN = '8322419038:AAGYxQZYZMKyHW-BY-Ydkx-pVBqmwE8h1ys';
const API_URL = `https://api.telegram.org/bot${BOT_TOKEN}`;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
async function sendMessage(chatId, text) {
    try {
        const response = await fetch(`${API_URL}/sendMessage`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: chatId,
                text: text,
                parse_mode: 'HTML'
            })
        });

        const result = await response.json();
        console.log('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', result);
        return result.ok;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
        return false;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
async function getUpdates() {
    try {
        const response = await fetch(`${API_URL}/getUpdates`);
        const result = await response.json();

        if (result.ok && result.result.length > 0) {
            console.log('–ù–∞–π–¥–µ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è:');
            result.result.forEach(update => {
                if (update.message) {
                    const msg = update.message;
                    console.log(`Chat ID: ${msg.chat.id}`);
                    console.log(`–û—Ç: ${msg.from.first_name} ${msg.from.last_name || ''}`);
                    console.log(`–¢–µ–∫—Å—Ç: ${msg.text}`);
                    console.log('---');
                }
            });

            // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π chat_id
            const lastMessage = result.result[result.result.length - 1];
            if (lastMessage.message) {
                const chatId = lastMessage.message.chat.id;
                console.log(`\nüéØ –í–∞—à Chat ID: ${chatId}`);

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                console.log('\nüì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...');
                await sendMessage(chatId, 'ü§ñ <b>–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!</b>\n\n–í–∞—à Chat ID: ' + chatId + '\n\n–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã:\n/start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n/help - —Å–ø—Ä–∞–≤–∫–∞');

                return chatId;
            }
        } else {
            console.log('‚ùå –°–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞.');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π:', error);
    }

    return null;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–æ—Ç–∞
async function checkBot() {
    try {
        const response = await fetch(`${API_URL}/getMe`);
        const result = await response.json();

        if (result.ok) {
            console.log('‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω:');
            console.log(`–ò–º—è: ${result.result.first_name}`);
            console.log(`Username: @${result.result.username}`);
            console.log(`ID: ${result.result.id}`);
            return true;
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–æ—Ç–∞:', result);
            return false;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç—É:', error);
        return false;
    }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
    console.log('ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –±–æ—Ç–∞...\n');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–æ—Ç–∞
    const botActive = await checkBot();
    if (!botActive) {
        console.log('‚ùå –ë–æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω.');
        return;
    }

    console.log('\nüì® –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...');
    const chatId = await getUpdates();

    if (chatId) {
        console.log(`\n‚úÖ –ì–æ—Ç–æ–≤–æ! –í–∞—à Chat ID: ${chatId}`);
        console.log('\nüöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä:');
        console.log('node server.js');
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º
main().catch(console.error);